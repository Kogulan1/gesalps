services:
  api:
    build: ./api
    container_name: gesalps_api
    ports:
      - "8000:8000"
    env_file: .env
    environment:
      - WORKER_ENABLED=false
      - REPORT_SERVICE_BASE=http://report-service:8010
      - OLLAMA_BASE=http://ollama:11434
      - DP_BACKEND=synthcity
      - DP_STRICT_DEFAULT=false
    depends_on:
      report-service:
        condition: service_started
      ollama:
        condition: service_healthy         # ðŸ‘ˆ wait for Ollama health
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 10s
    restart: unless-stopped

  synth-worker:
    build: ./synth_worker
    container_name: gesalps_worker
    env_file: .env
    environment:
      - OLLAMA_BASE=http://ollama:11434
      - DP_BACKEND=custom
      - DP_STRICT_DEFAULT=false
    depends_on:
      ollama:
        condition: service_healthy         # ðŸ‘ˆ wait for Ollama health
    restart: unless-stopped

  report-service:
    build: ./report_service
    container_name: gesalps_report
    env_file: .env
    environment:
      - PORT=8010
    ports:
      - "8010:8010"
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8010/health')"]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 10s
    restart: unless-stopped

  synth-worker-dp:
    build: ./synth_worker_dp
    container_name: gesalps_worker_dp
    env_file: .env
    environment:
      - DP_BACKEND=synthcity
      - DP_STRICT_DEFAULT=false
    depends_on:
      ollama:
        condition: service_healthy
    restart: unless-stopped

  # Pull your model once into the shared volume (runs then exits)
  ollama-init:
    image: ollama/ollama:latest
    container_name: gesalps_ollama_init
    volumes:
      - ollama:/root/.ollama
    entrypoint: ["/bin/sh","-lc","ollama serve & sleep 2 && ollama pull llama3.1:8b"]
    restart: "no"

  ollama:
    image: ollama/ollama:latest
    container_name: gesalps_ollama
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_HOST=0.0.0.0:11434      # ensure it listens on all interfaces
    volumes:
      - ollama:/root/.ollama
    depends_on:
      ollama-init:
        condition: service_completed_successfully
    healthcheck:
      # use the ollama CLI (bundled) instead of wget/curl
      test: ["CMD", "ollama", "list"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s
    restart: unless-stopped

volumes:
  ollama:
